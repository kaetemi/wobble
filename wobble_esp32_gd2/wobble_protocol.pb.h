/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0 */

#ifndef PB_WOBBLE_PROTOCOL_PB_H_INCLUDED
#define PB_WOBBLE_PROTOCOL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _MessageType {
    MessageType_UNDEFINED_MESSAGE = 0,
    MessageType_OPEN_STREAM = 1,
    MessageType_WRITE_FRAME = 2,
    MessageType_CLOSE_STREAM = 3,
    MessageType_SUBSCRIBE_STREAM_LIST = 4,
    MessageType_PUBLISH_STREAM = 6,
    MessageType_SUBSCRIBE = 7,
    MessageType_UNSUBSCRIBE = 8,
    MessageType_PUBLISH_FRAME = 9,
    MessageType_QUERY_FRAMES = 10
} MessageType;

typedef enum _SensorType {
    SensorType_UNDEFINED_SENSOR = 0,
    SensorType_ACCELEROMETER = 1,
    SensorType_TEMPERATURE = 2,
    SensorType_HUMIDITY = 3
} SensorType;

typedef enum _Unit {
    Unit_UNDEFINED_UNIT = 0,
    Unit_G = 1,
    Unit_CELSIUS = 2,
    Unit_RELATIVE_HUMIDITY = 3
} Unit;

/* Struct definitions */
typedef struct _ChannelData {
    pb_size_t data_count;
    uint32_t data[256];
} ChannelData;

typedef struct _CloseStream {
    MessageType message_type;
    int32_t alias;
} CloseStream;

typedef struct _QueryFrames {
    MessageType message_type;
    char name[64];
    int64_t from_timestamp;
    int64_t to_timestamp;
} QueryFrames;

typedef struct _StreamInfo {
    char name[64];
    int32_t channels;
    int32_t frequency;
    int32_t bits;
    int64_t timestamp;
    char description[64];
    pb_size_t channel_descriptions_count;
    char channel_descriptions[4][64];
    int32_t timestamp_precision;
    double latitude;
    double longitude;
    SensorType sensor;
    char hardware[64];
    Unit unit;
    float scale;
} StreamInfo;

typedef struct _Subscribe {
    MessageType message_type;
    char name[64];
} Subscribe;

typedef struct _SubscribeStreamList {
    MessageType message_type;
} SubscribeStreamList;

typedef struct _UndefinedMessage {
    MessageType message_type;
} UndefinedMessage;

typedef struct _Unsubscribe {
    MessageType message_type;
    char name[64];
} Unsubscribe;

typedef struct _OpenStream {
    MessageType message_type;
    char password[64];
    int32_t alias;
    bool has_info;
    StreamInfo info;
} OpenStream;

typedef struct _PublishFrame {
    MessageType message_type;
    char name[64];
    int64_t timestamp;
    int32_t offset;
    pb_size_t channels_count;
    ChannelData channels[4];
} PublishFrame;

typedef struct _PublishStream {
    MessageType message_type;
    bool has_info;
    StreamInfo info;
} PublishStream;

typedef struct _WriteFrame {
    MessageType message_type;
    int32_t alias;
    pb_size_t channels_count;
    ChannelData channels[4];
} WriteFrame;


/* Helper constants for enums */
#define _MessageType_MIN MessageType_UNDEFINED_MESSAGE
#define _MessageType_MAX MessageType_QUERY_FRAMES
#define _MessageType_ARRAYSIZE ((MessageType)(MessageType_QUERY_FRAMES+1))

#define _SensorType_MIN SensorType_UNDEFINED_SENSOR
#define _SensorType_MAX SensorType_HUMIDITY
#define _SensorType_ARRAYSIZE ((SensorType)(SensorType_HUMIDITY+1))

#define _Unit_MIN Unit_UNDEFINED_UNIT
#define _Unit_MAX Unit_RELATIVE_HUMIDITY
#define _Unit_ARRAYSIZE ((Unit)(Unit_RELATIVE_HUMIDITY+1))


/* Initializer values for message structs */
#define UndefinedMessage_init_default            {_MessageType_MIN}
#define StreamInfo_init_default                  {"", 0, 0, 0, 0, "", 0, {"", "", "", ""}, 0, 0, 0, _SensorType_MIN, "", _Unit_MIN, 0}
#define OpenStream_init_default                  {_MessageType_MIN, "", 0, false, StreamInfo_init_default}
#define ChannelData_init_default                 {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define WriteFrame_init_default                  {_MessageType_MIN, 0, 0, {ChannelData_init_default, ChannelData_init_default, ChannelData_init_default, ChannelData_init_default}}
#define CloseStream_init_default                 {_MessageType_MIN, 0}
#define SubscribeStreamList_init_default         {_MessageType_MIN}
#define PublishStream_init_default               {_MessageType_MIN, false, StreamInfo_init_default}
#define Subscribe_init_default                   {_MessageType_MIN, ""}
#define Unsubscribe_init_default                 {_MessageType_MIN, ""}
#define PublishFrame_init_default                {_MessageType_MIN, "", 0, 0, 0, {ChannelData_init_default, ChannelData_init_default, ChannelData_init_default, ChannelData_init_default}}
#define QueryFrames_init_default                 {_MessageType_MIN, "", 0, 0}
#define UndefinedMessage_init_zero               {_MessageType_MIN}
#define StreamInfo_init_zero                     {"", 0, 0, 0, 0, "", 0, {"", "", "", ""}, 0, 0, 0, _SensorType_MIN, "", _Unit_MIN, 0}
#define OpenStream_init_zero                     {_MessageType_MIN, "", 0, false, StreamInfo_init_zero}
#define ChannelData_init_zero                    {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define WriteFrame_init_zero                     {_MessageType_MIN, 0, 0, {ChannelData_init_zero, ChannelData_init_zero, ChannelData_init_zero, ChannelData_init_zero}}
#define CloseStream_init_zero                    {_MessageType_MIN, 0}
#define SubscribeStreamList_init_zero            {_MessageType_MIN}
#define PublishStream_init_zero                  {_MessageType_MIN, false, StreamInfo_init_zero}
#define Subscribe_init_zero                      {_MessageType_MIN, ""}
#define Unsubscribe_init_zero                    {_MessageType_MIN, ""}
#define PublishFrame_init_zero                   {_MessageType_MIN, "", 0, 0, 0, {ChannelData_init_zero, ChannelData_init_zero, ChannelData_init_zero, ChannelData_init_zero}}
#define QueryFrames_init_zero                    {_MessageType_MIN, "", 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ChannelData_data_tag                     12
#define CloseStream_message_type_tag             1
#define CloseStream_alias_tag                    6
#define QueryFrames_message_type_tag             1
#define QueryFrames_name_tag                     4
#define QueryFrames_from_timestamp_tag           20
#define QueryFrames_to_timestamp_tag             21
#define StreamInfo_name_tag                      4
#define StreamInfo_channels_tag                  7
#define StreamInfo_frequency_tag                 8
#define StreamInfo_bits_tag                      9
#define StreamInfo_timestamp_tag                 13
#define StreamInfo_timestamp_precision_tag       22
#define StreamInfo_sensor_tag                    25
#define StreamInfo_hardware_tag                  26
#define StreamInfo_unit_tag                      27
#define StreamInfo_scale_tag                     28
#define StreamInfo_latitude_tag                  23
#define StreamInfo_longitude_tag                 24
#define StreamInfo_description_tag               14
#define StreamInfo_channel_descriptions_tag      15
#define Subscribe_message_type_tag               1
#define Subscribe_name_tag                       4
#define SubscribeStreamList_message_type_tag     1
#define UndefinedMessage_message_type_tag        1
#define Unsubscribe_message_type_tag             1
#define Unsubscribe_name_tag                     4
#define OpenStream_message_type_tag              1
#define OpenStream_info_tag                      16
#define OpenStream_password_tag                  5
#define OpenStream_alias_tag                     6
#define PublishFrame_message_type_tag            1
#define PublishFrame_name_tag                    4
#define PublishFrame_timestamp_tag               13
#define PublishFrame_offset_tag                  18
#define PublishFrame_channels_tag                19
#define PublishStream_message_type_tag           1
#define PublishStream_info_tag                   17
#define WriteFrame_message_type_tag              1
#define WriteFrame_alias_tag                     6
#define WriteFrame_channels_tag                  19

/* Struct field encoding specification for nanopb */
#define UndefinedMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    message_type,      1)
#define UndefinedMessage_CALLBACK NULL
#define UndefinedMessage_DEFAULT NULL

#define StreamInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              4) \
X(a, STATIC,   SINGULAR, INT32,    channels,          7) \
X(a, STATIC,   SINGULAR, INT32,    frequency,         8) \
X(a, STATIC,   SINGULAR, INT32,    bits,              9) \
X(a, STATIC,   SINGULAR, INT64,    timestamp,        13) \
X(a, STATIC,   SINGULAR, STRING,   description,      14) \
X(a, STATIC,   REPEATED, STRING,   channel_descriptions,  15) \
X(a, STATIC,   SINGULAR, INT32,    timestamp_precision,  22) \
X(a, STATIC,   SINGULAR, DOUBLE,   latitude,         23) \
X(a, STATIC,   SINGULAR, DOUBLE,   longitude,        24) \
X(a, STATIC,   SINGULAR, UENUM,    sensor,           25) \
X(a, STATIC,   SINGULAR, STRING,   hardware,         26) \
X(a, STATIC,   SINGULAR, UENUM,    unit,             27) \
X(a, STATIC,   SINGULAR, FLOAT,    scale,            28)
#define StreamInfo_CALLBACK NULL
#define StreamInfo_DEFAULT NULL

#define OpenStream_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    message_type,      1) \
X(a, STATIC,   SINGULAR, STRING,   password,          5) \
X(a, STATIC,   SINGULAR, INT32,    alias,             6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  info,             16)
#define OpenStream_CALLBACK NULL
#define OpenStream_DEFAULT NULL
#define OpenStream_info_MSGTYPE StreamInfo

#define ChannelData_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, UINT32,   data,             12)
#define ChannelData_CALLBACK NULL
#define ChannelData_DEFAULT NULL

#define WriteFrame_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    message_type,      1) \
X(a, STATIC,   SINGULAR, INT32,    alias,             6) \
X(a, STATIC,   REPEATED, MESSAGE,  channels,         19)
#define WriteFrame_CALLBACK NULL
#define WriteFrame_DEFAULT NULL
#define WriteFrame_channels_MSGTYPE ChannelData

#define CloseStream_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    message_type,      1) \
X(a, STATIC,   SINGULAR, INT32,    alias,             6)
#define CloseStream_CALLBACK NULL
#define CloseStream_DEFAULT NULL

#define SubscribeStreamList_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    message_type,      1)
#define SubscribeStreamList_CALLBACK NULL
#define SubscribeStreamList_DEFAULT NULL

#define PublishStream_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    message_type,      1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  info,             17)
#define PublishStream_CALLBACK NULL
#define PublishStream_DEFAULT NULL
#define PublishStream_info_MSGTYPE StreamInfo

#define Subscribe_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    message_type,      1) \
X(a, STATIC,   SINGULAR, STRING,   name,              4)
#define Subscribe_CALLBACK NULL
#define Subscribe_DEFAULT NULL

#define Unsubscribe_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    message_type,      1) \
X(a, STATIC,   SINGULAR, STRING,   name,              4)
#define Unsubscribe_CALLBACK NULL
#define Unsubscribe_DEFAULT NULL

#define PublishFrame_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    message_type,      1) \
X(a, STATIC,   SINGULAR, STRING,   name,              4) \
X(a, STATIC,   SINGULAR, INT64,    timestamp,        13) \
X(a, STATIC,   SINGULAR, INT32,    offset,           18) \
X(a, STATIC,   REPEATED, MESSAGE,  channels,         19)
#define PublishFrame_CALLBACK NULL
#define PublishFrame_DEFAULT NULL
#define PublishFrame_channels_MSGTYPE ChannelData

#define QueryFrames_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    message_type,      1) \
X(a, STATIC,   SINGULAR, STRING,   name,              4) \
X(a, STATIC,   SINGULAR, INT64,    from_timestamp,   20) \
X(a, STATIC,   SINGULAR, INT64,    to_timestamp,     21)
#define QueryFrames_CALLBACK NULL
#define QueryFrames_DEFAULT NULL

extern const pb_msgdesc_t UndefinedMessage_msg;
extern const pb_msgdesc_t StreamInfo_msg;
extern const pb_msgdesc_t OpenStream_msg;
extern const pb_msgdesc_t ChannelData_msg;
extern const pb_msgdesc_t WriteFrame_msg;
extern const pb_msgdesc_t CloseStream_msg;
extern const pb_msgdesc_t SubscribeStreamList_msg;
extern const pb_msgdesc_t PublishStream_msg;
extern const pb_msgdesc_t Subscribe_msg;
extern const pb_msgdesc_t Unsubscribe_msg;
extern const pb_msgdesc_t PublishFrame_msg;
extern const pb_msgdesc_t QueryFrames_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define UndefinedMessage_fields &UndefinedMessage_msg
#define StreamInfo_fields &StreamInfo_msg
#define OpenStream_fields &OpenStream_msg
#define ChannelData_fields &ChannelData_msg
#define WriteFrame_fields &WriteFrame_msg
#define CloseStream_fields &CloseStream_msg
#define SubscribeStreamList_fields &SubscribeStreamList_msg
#define PublishStream_fields &PublishStream_msg
#define Subscribe_fields &Subscribe_msg
#define Unsubscribe_fields &Unsubscribe_msg
#define PublishFrame_fields &PublishFrame_msg
#define QueryFrames_fields &QueryFrames_msg

/* Maximum encoded size of messages (where known) */
#define UndefinedMessage_size                    2
#define StreamInfo_size                          544
#define OpenStream_size                          626
#define ChannelData_size                         1536
#define WriteFrame_size                          6173
#define CloseStream_size                         13
#define SubscribeStreamList_size                 2
#define PublishStream_size                       550
#define Subscribe_size                           67
#define Unsubscribe_size                         67
#define PublishFrame_size                        6250
#define QueryFrames_size                         91

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
